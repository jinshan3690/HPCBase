apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: "${rootProject.rootDir}/config.gradle"

android {
    signingConfigs {
        debug {
            storeFile file('../hpcbase.jks')
            storePassword 'hpcbase'
            keyAlias = 'hpcbase'
            keyPassword 'hpcbase'
        }
    }
    project.ext.setDefaultConfig project

    defaultConfig {
        applicationId rootProject.ext.android["applicationId"]
        //ARouter路由配置
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            //启用资源压缩
            shrinkResources false
        }
    }

}

kapt {
    correctErrorTypes true
}

//If you're using the Android Databinding library, you may want to increase the number of errors that javac will print.
// When Dagger prints an error, databinding compilation will halt and sometimes print more than 100 errors,
// which is the default amount for javac. For more information, see Issue 306.
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["androidJunit"]
    androidTestImplementation rootProject.ext.dependencies["espresso"]

    implementation project(':widget')

    api rootProject.ext.dependencies["hilt-android"]
    api rootProject.ext.dependencies["hilt-lifecycle-viewmodel"]
    api rootProject.ext.dependencies["hilt-work"]
    kapt rootProject.ext.dependencies["hilt-android-compiler"]
    kapt rootProject.ext.dependencies["hilt-compiler"]

    kapt rootProject.ext.dependencies["room-compiler"]
    kapt rootProject.ext.dependencies["arouter-compiler"]
    kapt rootProject.ext.dependencies["glide-compiler"]
    kapt rootProject.ext.dependencies["permissionsdispatcher-compiler"]

    if (!rootProject.ext.isModule) {
//        implementation project(':login')
    }

}